package com.mycompany.passwordmanager;

import java.io.IOException;
import java.io.PrintWriter;
import java.security.SecureRandom;
import java.util.Base64;

public class TokenGenerator {
    // Constant defining the length of the token in bytes
    private static final int TOKEN_LENGTH = 16;

    // File path where the generated token and its timestamp will be stored
    private static final String TOKEN_FILE = "/Users/aem397/Downloads/Password-Manager-main/PasswordManager/src/main/resources/com/mycompany/passwordmanager/token.txt";

    /**
     * Generates a secure token using SecureRandom and encodes it in Base64.
     *
     * @return A string representing the generated token.
     */
    public static String generateToken() {
        // Create a SecureRandom instance for generating high-entropy random bytes
        SecureRandom random = new SecureRandom();

        // Array to store the random bytes
        byte[] bytes = new byte[TOKEN_LENGTH];

        // Generate random bytes and store them in the array
        random.nextBytes(bytes);

        // Return a Base64-encoded string of the generated bytes without padding
        return Base64.getUrlEncoder().withoutPadding().encodeToString(bytes);
    }

    /**
     * Generates a token, captures the current timestamp, and stores both in a file.
     */
    public static void generateAndStoreToken() {
        // Generate a secure token
        String token = generateToken();

        // Get the current system time in milliseconds
        long timestamp = System.currentTimeMillis();

        // Try-with-resources statement to handle the PrintWriter
        try (PrintWriter out = new PrintWriter(TOKEN_FILE)) {
            // Write the generated token to the file
            out.println(token);
            // Write the timestamp when the token was generated to the file
            out.println(timestamp);
        } catch (IOException e) {
            // Handle any IOExceptions that occur during file writing
            System.err.println("Error writing to file: " + e.getMessage());
        }
    }
}
